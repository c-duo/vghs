
{% if product %}
<script>
  var __productWizRioProduct = {{product | json}};
  if (typeof __productWizRioProduct === 'object' && __productWizRioProduct !== null) {
    __productWizRioProduct.options = {{product.options_with_values | json}};
  }
  var __productWizRioHasOnlyDefaultVariant = {{product.has_only_default_variant}};
  var __productWizRioAssets = {{shop.metafields.productwiz.rio-assets | json}};
  if (typeof __productWizRioAssets === 'string') {
    __productWizRioAssets = JSON.parse(__productWizRioAssets);
  }
  var __productWizRioVariantImages = {{product.metafields.productwiz.rio | json}};
  var __productWizRioProductOptions = {{product.metafields.productwiz.rio-options | json}};
  var __productWizRioProductOptionsSettings = {{shop.metafields.productwiz.rio-options-settings | json}};
  var __productWizRioShop = {{shop.metafields.productwiz.rio | json}};
  var __productWizRioProductOptionsShop = {{shop.metafields.productwiz.rio-options | json}};
  var __productWizRioProductGallery = {{shop.metafields.productwiz.rio-gallery | json}};
  var __productWizRio = {};
  var __productWizRioOptions = {};
  __productWizRio.moneyFormat = {{shop.money_format | json}};
  __productWizRio.moneyFormatWithCurrency = {{shop.money_with_currency_format | json}};
  /*rio-start*/
  __productWizRio.theme = 'custom-video-game-high-school.myshopify.com';
  (function() {
    function insertGalleryPlaceholder(e,t){try{var i=__productWizRio.config["breakpoint"];const s="string"==typeof i&&window.matchMedia(`(min-width:${i})`).matches,c=__productWizRio.config[s?"desktop":"mobile"]["vertical"];var o=(()=>{const t=e=>{e=("model"===e.media_type?e.preview_image:e).aspect_ratio;return 1/("number"==typeof e?e:1)};var i=new URL(document.location).searchParams.get("variant")||null;const o=(e=>{const{productRio:t,product:i}=__productWizRio;let o=e;if("string"==typeof o&&(i.variants.find(e=>""+e.id===o)||(o=null)),"string"!=typeof o&&(n=i.variants.find(e=>e.available),o=n?""+n.id:""+i.variants[0].id),!Array.isArray(t)){var l=0<i.media.length?i.media[0]:null,n=i.variants.find(e=>""+e.id===o);if(n){const r=n.featured_media?n.featured_media.id:null;if(r){n=i.media.find(e=>e.id===r);if(n)return n}}return l}{const a=t.find(e=>e.id===o);if(a&&Array.isArray(a.media)&&0<a.media.length)if(c){const d=[];if(a.media.forEach(t=>{var e=i.media.find(e=>""+e.id===t);e&&d.push(e)}),0<d.length)return d}else{const s=a.media[0];l=i.media.find(e=>""+e.id===s);if(l)return l}}return null})(i);if(Array.isArray(o)){i=o.map(e=>t(e));let e=1;return 0<i.length&&(i=Math.max(...i),Number.isFinite(i)&&(e=i)),(100*e).toFixed(3)+"%"}return o?(100*t(o)).toFixed(3)+"%":null})();if("string"!=typeof o)return void console.log("Rio: Gallery placeholder gallery ratio could not be found. Bailing out.");var l=(e=>{var t=__productWizRio.config[s?"desktop":"mobile"]["thumbnails"];if("object"==typeof t){var{orientation:i,container:o,thumbnailWidth:t}=t;if("left"===i||"right"===i){e=Number.parseFloat(e);if(Number.isFinite(e)){e=e/100;if("number"==typeof o){const l=100*o*e;return l.toFixed(3)+"%"}if("number"==typeof t)return t*e+"px"}}}return null})(o),n="string"==typeof l?`calc(${o} - ${l})`:o,r=(()=>{const e=__productWizRio.config[s?"desktop":"mobile"]["maxHeight"];return"string"==typeof e&&e.endsWith("px")&&!c?e:null})(),a="string"==typeof r?`min(${n}, ${r})`:n;const p=document.createElement("div");p.style.display="block",p.style.marginTop="-50px",p.style.pointerEvents="none",p.style.paddingBottom=`calc(${a} + 100px)`,console.log("Rio: Gallery placeholder scale: "+p.style.paddingBottom),p.style.boxSizing="border-box",e.appendChild(p);const g=()=>{p.style.position="absolute",p.style.top=0,p.style.zIndex=-2147483647};document.addEventListener("DOMContentLoaded",()=>{try{0===p.clientHeight&&(console.log("Rio: Gallery placeholder height is 0"),g());var e=`${0===p.clientHeight?window.innerHeight:p.clientHeight}px`;p.style.paddingBottom=null,p.style.overflow="hidden",p.style.height=e,console.log("Rio: Gallery placeholder height: "+p.style.height);const i=document.createElement("span");i.style.wordBreak="break-all",i.style.fontSize="20px",i.style.lineHeight=0,i.style.userSelect="none";let t="";for(let e=0;e<1e4;e+=1)t+="â€‚";i.innerText=t,p.appendChild(i)}catch(e){console.log("Rio: failed to insert gallery placeholder (2)"),console.log(e)}});const u=new MutationObserver(()=>{try{u.disconnect(),console.log("Rio: rio-media-gallery inflated"),g()}catch(e){console.log("Rio: failed to insert gallery placeholder (3)"),console.log(e)}});var d={childList:!0,subtree:!0};u.observe(t,d),window.addEventListener("load",()=>{try{e.removeChild(p)}catch(e){console.log("Rio: failed to remove gallery placeholder"),console.log(e)}})}catch(e){console.log("Rio: failed to insert gallery placeholder"),console.log(e)}}
    __productWizRio.renderQueue = [];

__productWizRio.queueRender = (...params) => {
  __productWizRio.renderQueue.push(params);

  if (typeof __productWizRio.processRenderQueue === 'function') {
    __productWizRio.processRenderQueue();
  }
};

__productWizRioOptions.renderQueue = [];

__productWizRioOptions.queueRender = (...params) => {
  __productWizRioOptions.renderQueue.push(params);

  if (typeof __productWizRioOptions.processRenderQueue === 'function') {
    __productWizRioOptions.processRenderQueue();
  }
};

function debugLog(...x) {
  console.log(...x);
}

function insertRioOptionsTitleStyle(style) {
  let str = '';

  for (const key of Object.keys(style)) {
    str += `${key}:${style[key]};`;
  }

  const styleElem = document.createElement('style');
  styleElem.textContent = `.rio-product-option-title{${str}}`;
  document.head.appendChild(styleElem);
}

function getComputedStyle(selectorStr, props) {
  return new Promise(resolve => {
    const func = () => {
      if (typeof selectorStr !== 'string' || !Array.isArray(props)) {
        return null;
      }

      const selectors = selectorStr.split('/');
      let root = null;
      let child = null;

      for (const selector of selectors) {
        const isClassName = selector.startsWith('.');
        const isId = selector.startsWith('#');
        const isIdOrClassName = isClassName || isId;
        const name = isIdOrClassName ? selector.substring(1) : selector;
        const element = document.createElement(isIdOrClassName ? 'div' : name);

        if (isClassName) {
          element.classList.add(name);
        }

        if (isId) {
          element.id = name;
        }

        if (root === null) {
          root = element;
        } else {
          child.appendChild(element);
        }

        child = element;
      }

      if (root === null) {
        return null;
      }

      root.style.position = 'absolute';
      root.style.zIndex = -100000;
      const style = {};
      document.body.appendChild(root);
      const computedStyle = window.getComputedStyle(child);

      for (const prop of props) {
        style[prop] = computedStyle.getPropertyValue(prop);
      }

      document.body.removeChild(root);
      return style;
    };

    const safeFunc = () => {
      try {
        return func();
      } catch (err) {
        debugLog(err);
        return null;
      }
    };

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => {
        resolve(safeFunc());
      });
    } else {
      resolve(safeFunc());
    }
  });
}

function escapeSelector(selector) {
  if (typeof selector !== 'string') {
    return selector;
  }

  return selector.replace(/"/g, '\\"');
}

function descendantQuerySelector(child, selector) {
  if (!child || typeof selector !== 'string') {
    return null;
  }

  let node = child.parentNode;

  while (node) {
    if (typeof node.matches === 'function' && node.matches(selector)) {
      return node;
    }

    node = node.parentNode;
  }

  return null;
}

function getTheme() {
  return __productWizRio.theme;
}

function getBeforeChild(root, beforeChildSelector) {
  const rootFirstChild = root.firstChild;

  if (!beforeChildSelector) {
    return {
      found: true,
      child: rootFirstChild
    };
  }

  const firstChild = typeof beforeChildSelector === 'function' ? beforeChildSelector(root) : root.querySelector(beforeChildSelector);

  if (firstChild) {
    return {
      found: true,
      child: firstChild
    };
  }

  return {
    found: false,
    child: rootFirstChild
  };
}

let injectRioOptionsDivBeforeChildNotFound = null;

function injectRioOptionsDiv(root, config, style = {}, onInjected = () => {}, beforeChildSelector = null, deferredQueue = false) {
  const rioOptionsClassName = 'rio-options';

  if (!document.querySelector(`.${rioOptionsClassName}`)) {
    debugLog('Inserting rio-options!');
    const rioOptions = document.createElement('div');
    rioOptions.className = rioOptionsClassName;
    rioOptions.style.width = '100%';

    for (const styleItemKey of Object.keys(style)) {
      rioOptions.style[styleItemKey] = style[styleItemKey];
    }

    const {
      child: beforeChild,
      found
    } = getBeforeChild(root, beforeChildSelector);

    if (!found) {
      debugLog(`beforeChildSelector ${beforeChildSelector} not initally found`);
      injectRioOptionsDivBeforeChildNotFound = rioOptions;
    }

    root.insertBefore(rioOptions, beforeChild);
    onInjected(rioOptions);

    if (!deferredQueue) {
      __productWizRioOptions.queueRender(rioOptions, config);
    } else {
      return [rioOptions, config];
    }
  }

  if (injectRioOptionsDivBeforeChildNotFound) {
    const {
      child: beforeChild,
      found
    } = getBeforeChild(root, beforeChildSelector);

    if (found) {
      debugLog(`beforeChildSelector ${beforeChildSelector} found! Moving node position`);
      root.insertBefore(injectRioOptionsDivBeforeChildNotFound, beforeChild);
      injectRioOptionsDivBeforeChildNotFound = null;
    }
  }

  return null;
}

function getCurrentVariantFromUrl() {
  const url = new URL(window.location);
  const variant = url.searchParams.get('variant');

  if (variant) {
    return variant;
  }

  return null;
}

const setInitialVariant = (root, selector = 'select[name="id"]') => {
  const getCurrentVariantFromSelector = () => {
    const elem = root.querySelector(selector);

    if (elem && elem.value) {
      return elem.value;
    }

    return null;
  };

  const setCurrentVariant = id => {
    debugLog(`Setting initial variant to ${id}`);
    __productWizRioOptions.initialSelectedVariantId = id;
  };

  const currentVariantFromUrl = getCurrentVariantFromUrl();

  if (currentVariantFromUrl) {
    setCurrentVariant(currentVariantFromUrl);
    return;
  }

  const currentVariantFromSelector = getCurrentVariantFromSelector();

  if (currentVariantFromSelector) {
    setCurrentVariant(currentVariantFromSelector);
    return;
  }

  if (document.readyState === 'loading') {
    const forceUpdateIfNeeded = () => {
      if (typeof __productWizRioOptions.forceUpdate === 'function') {
        debugLog('Force updating options (current variant DCL)!');

        __productWizRioOptions.forceUpdate();
      }
    };

    document.addEventListener('DOMContentLoaded', () => {
      const currentVariantFromSelectorDcl = getCurrentVariantFromSelector();

      if (currentVariantFromSelectorDcl) {
        setCurrentVariant(currentVariantFromSelectorDcl);
        forceUpdateIfNeeded();
      } else {
        debugLog('Current variant not found on DOMContentLoaded!');
      }
    });
    return;
  }

  debugLog('Current variant not found');
};

function startMutationObserver(options, callback) {
  const observer = new MutationObserver(mutations => {
    mutations.forEach(mutation => {
      callback(mutation);
    });
  });
  observer.observe(document, options);
  return observer;
}

function clickInput(elem, eventQueue) {
  let func;

  if (elem.type === 'radio' || elem.type === 'checkbox') {
    debugLog('Doing radio change');
    elem.checked = true;

    func = () => {
      elem.dispatchEvent(new Event('change', {
        bubbles: true
      }));
    };
  } else {
    debugLog('Doing button click');

    func = () => {
      elem.click();
    };
  }

  if (eventQueue) {
    eventQueue.push(func);
  } else {
    func();
  }
}
    
    (() => {
      const product = __productWizRioProduct;
      const productMetafield = __productWizRioVariantImages;
      const shopMetafield = __productWizRioShop;
      const productGalleryMetafield = __productWizRioProductGallery;
      __productWizRio.enabled = false;
      if (product && Array.isArray(product.media) && product.media.length > 0) {
        const hasVariantImages = productMetafield && productMetafield.enabled && !productMetafield.empty;
        const variantImagesInit = (!shopMetafield || !shopMetafield.disabled) && hasVariantImages;
        const productGalleryDisabledWithTag = Array.isArray(product.tags) && product.tags.includes('vw-disable-product-gallery');
        const productGalleryInit = productGalleryMetafield && !productGalleryMetafield.disabled && !productGalleryDisabledWithTag;
        if (variantImagesInit || productGalleryInit) {
          __productWizRio.enabled = true;
          __productWizRio.product = product;
          if (variantImagesInit) {
            __productWizRio.productRio = productMetafield.mapping;
            __productWizRio.imageFilenames = productMetafield.imageFilenames;
            __productWizRio.mediaSettings = productMetafield.mediaSettings;
          }
        }
      }
      if (__productWizRio.enabled) {
        
        const callback = (mutation) => {
          Array.from(mutation.addedNodes).forEach((addedNode) => {
            if (typeof addedNode.className === 'string') {
              if (!__productWizRio.config) {
__productWizRio.config = {
  "desktop": {
    "swipe": true,
    "dark": true,
    "thumbnails": {
      "orientation": "right",
      "container": 0.17,
      "multiRow": true,
      "thumbnailsPerRow": 1,
      "navigation": true,
      "verticalOverflow": true,
      "navigationSettings": {
        "size": 5,
        "fill": "rgba(255, 255, 255, 1)",
        "background": "rgba(0, 0, 0, 0.5)"
      },
      "spacing": 1,
      "spacingFromImage": 1,
      "fit": "cover",
      "borderSelected": {
        "style": "solid",
        "color": "rgb(0, 0, 0)",
        "thickness": 1,
        "radius": 0
      },
      "borderUnselected": {
        "style": "solid",
        "color": null,
        "thickness": 1,
        "radius": 0
      }
    },
    "border": {
      "style": "solid",
      "color": null,
      "thickness": 1,
      "radius": 0
    },
    "slideCircular": false,
    "slideTransition": "scroll",
    "simulateTouch": true,
    "preloadNextImage": true,
    "keyboard": true,
    "slideLoopInfinite": true,
    "navigation": false,
    "pagination": false,
    "maxHeight": "square",
    "disableVariantImageSelectionOnPageLoad": false,
    "lightBox": true,
    "magnify": false,
    "lightBoxZoom": 2
  },
  "mobile": {
    "swipe": true,
    "dark": true,
    "thumbnails": {
      "orientation": "bottom",
      "thumbnailsPerRow": 3,
      "multiRow": false,
      "navigation": true,
      "navigationSettings": {
        "size": 5,
        "fill": "rgba(255, 255, 255, 1)",
        "background": "rgba(0, 0, 0, 0.5)"
      },
      "spacing": 1,
      "spacingFromImage": 1,
      "fit": "cover",
      "borderSelected": {
        "style": "solid",
        "color": "rgb(0, 0, 0)",
        "thickness": 1,
        "radius": 0
      },
      "borderUnselected": {
        "style": "solid",
        "color": null,
        "thickness": 1,
        "radius": 0
      }
    },
    "border": {
      "style": "solid",
      "color": null,
      "thickness": 1,
      "radius": 0
    },
    "slideCircular": false,
    "slideTransition": "fade",
    "simulateTouch": true,
    "preloadNextImage": true,
    "keyboard": true,
    "slideLoopInfinite": true,
    "navigation": false,
    "pagination": false,
    "maxHeight": "square",
    "disableVariantImageSelectionOnPageLoad": false,
    "lightBox": true,
    "magnify": false,
    "lightBoxZoom": 2
  },
  "video": {
    "html5Player": false,
    "autoPlay": true,
    "muted": false,
    "controls": true,
    "loop": true
  },
  "externalVideo": {
    "autoPlay": true,
    "muted": false,
    "controls": true
  },
  "model": {
    "autoRotate": true
  },
  "lightBoxBackgroundColor": "rgba(0, 0, 0, 0.8)",
  "breakpoint": "750px",
  "disableNavigationWithMedia": false,
  "galaxio": "{\"mobile\":{\"layout\":\"bottom-thumbnails\",\"layoutStackedSpacing\":1,\"thumbnailImageFit\":\"cover\",\"thumbnailSpacing\":1,\"thumbnailSpacingFromImage\":1,\"thumbnailsHorizontal\":{\"type\":\"responsive\",\"responsive\":{\"thumbnailsPerRow\":3},\"fixed\":{\"thumbnailWidth\":110}},\"thumbnailsVertical\":{\"type\":\"responsive\",\"responsive\":{\"container\":0.17},\"fixed\":{\"thumbnailWidth\":110}},\"thumbnailCarousel\":true,\"thumbnailCarouselSettings\":{\"arrowSize\":5,\"arrowColorFill\":\"rgba(255, 255, 255, 1)\",\"arrowColorBackground\":\"rgba(0, 0, 0, 0.5)\"},\"thumbnailBorderSelected\":{\"style\":\"solid\",\"color\":\"rgb(0, 0, 0)\",\"thickness\":1,\"radius\":0},\"thumbnailBorderUnselected\":{\"style\":\"solid\",\"color\":null,\"thickness\":1,\"radius\":0},\"imageFit\":\"square\",\"imageFitCustom\":500,\"imageBorder\":{\"style\":\"solid\",\"color\":null,\"thickness\":1,\"radius\":0},\"simulateTouch\":true,\"preloadNextImage\":true,\"keyboard\":true,\"slideTransition\":\"fade\",\"slideLoopInfinite\":true,\"disableVariantImageSelectionOnPageLoad\":false,\"disableScrollToVariantImageOnVariantChange\":false,\"slideCircular\":false,\"arrows\":false,\"arrowSettings\":{\"type\":\"oval\",\"size\":5,\"colorFill\":\"rgba(255, 255, 255, 1)\",\"colorBackground\":\"rgba(0, 0, 0, 0.3)\"},\"zoomType\":\"lightBox\",\"zoomSettings\":{\"lightBoxZoom\":2,\"magnifyZoom\":2},\"pagination\":false,\"paginationSettings\":{\"type\":\"standard\",\"clickable\":false,\"size\":3,\"spacing\":3,\"spacingFromImage\":0,\"standardColors\":{\"selected\":\"rgba(0, 0, 0, 0.75)\",\"unselected\":\"rgba(0, 0, 0, 0.2)\"},\"numericColors\":{\"selectedBackground\":\"rgba(0, 0, 0, 0.75)\",\"unselectedBackground\":\"rgba(0, 0, 0, 0.2)\",\"selectedFill\":\"rgba(255, 255, 255, 1)\",\"unselectedFill\":\"rgba(0, 0, 0, 1)\"}}},\"desktop\":{\"layout\":\"right-thumbnails\",\"layoutStackedSpacing\":1,\"thumbnailImageFit\":\"cover\",\"thumbnailSpacing\":1,\"thumbnailSpacingFromImage\":1,\"thumbnailsHorizontal\":{\"type\":\"responsive\",\"responsive\":{\"thumbnailsPerRow\":3},\"fixed\":{\"thumbnailWidth\":110}},\"thumbnailsVertical\":{\"type\":\"responsive\",\"responsive\":{\"container\":0.17},\"fixed\":{\"thumbnailWidth\":110}},\"thumbnailCarousel\":true,\"thumbnailCarouselSettings\":{\"arrowSize\":5,\"arrowColorFill\":\"rgba(255, 255, 255, 1)\",\"arrowColorBackground\":\"rgba(0, 0, 0, 0.5)\"},\"thumbnailBorderSelected\":{\"style\":\"solid\",\"color\":\"rgb(0, 0, 0)\",\"thickness\":1,\"radius\":0},\"thumbnailBorderUnselected\":{\"style\":\"solid\",\"color\":null,\"thickness\":1,\"radius\":0},\"imageFit\":\"square\",\"imageFitCustom\":500,\"imageBorder\":{\"style\":\"solid\",\"color\":null,\"thickness\":1,\"radius\":0},\"simulateTouch\":true,\"preloadNextImage\":true,\"keyboard\":true,\"slideTransition\":\"scroll\",\"slideLoopInfinite\":true,\"disableVariantImageSelectionOnPageLoad\":false,\"disableScrollToVariantImageOnVariantChange\":false,\"slideCircular\":false,\"arrows\":false,\"arrowSettings\":{\"type\":\"oval\",\"size\":5,\"colorFill\":\"rgba(255, 255, 255, 1)\",\"colorBackground\":\"rgba(0, 0, 0, 0.3)\"},\"zoomType\":\"lightBox\",\"zoomSettings\":{\"lightBoxZoom\":2,\"magnifyZoom\":2},\"pagination\":false,\"paginationSettings\":{\"type\":\"standard\",\"clickable\":false,\"size\":3,\"spacing\":3,\"spacingFromImage\":0,\"standardColors\":{\"selected\":\"rgba(0, 0, 0, 0.75)\",\"unselected\":\"rgba(0, 0, 0, 0.2)\"},\"numericColors\":{\"selectedBackground\":\"rgba(0, 0, 0, 0.75)\",\"unselectedBackground\":\"rgba(0, 0, 0, 0.2)\",\"selectedFill\":\"rgba(255, 255, 255, 1)\",\"unselectedFill\":\"rgba(0, 0, 0, 1)\"}}},\"settings\":{\"video\":{\"html5Player\":false,\"autoPlay\":true,\"muted\":false,\"controls\":true,\"loop\":true},\"externalVideo\":{\"autoPlay\":true,\"muted\":false,\"controls\":true},\"model\":{\"autoRotate\":true},\"lightBoxBackgroundColor\":\"rgba(0, 0, 0, 0.8)\",\"disableArrowsWithMedia\":false,\"breakpoint\":\"750px\"}}"
};
}

try {
  if (addedNode.matches('.product__photo') && !__productWizRio.finishedInjection) {
    const container = addedNode;
    const newNode = container.cloneNode(false);
    newNode.className += ' rio-media-gallery';
    newNode.style.paddingBottom = '10px';
    container.parentElement.insertBefore(newNode, container.nextSibling);
    container.style.display = 'none';
    __productWizRio.finishedInjection = true;
  }
} catch (err) {}
            }
          });
        };
        const observer = startMutationObserver(
          { childList: true, subtree: true },
          (mutation) => callback(mutation)
        );
        window.addEventListener('load', () => {
          observer.disconnect();
        });
        
        
      }
    })();
    
  })();
</script>
<link rel="stylesheet" href="{{ 'productwiz-rio.min.css' | asset_url }}">
<script async src="{{ 'productwiz-rio.min.js' | asset_url }}"></script>
{% endif %}
